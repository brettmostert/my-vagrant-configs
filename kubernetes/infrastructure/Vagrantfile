# -*- mode: ruby -*-
# vi: set ft=ruby :

username = ENV['VAGRANT_USERNAME'] || 'admin'
password = ENV['VAGRANT_PASSWORD'] || 'admin'
bridge = ENV['VAGRANT_NETWORK_BRIDGE'] || 'External'

BOX = "hashicorp/bionic64"
BOX_VERSION = "1.0.282"
BOX_MEM = "1024"
BOX_MEM_MAX = "3072"
BOX_CPU = "2"
BOX_BOOTSTRAP = "bootstrap-default.sh"

servers = [
  {
    :name => "k8-master-node",
    :type => "master",
    :box => BOX,
    :box_version => BOX_VERSION,
    :mem => BOX_MEM,
    :max_mem => BOX_MEM_MAX,
    :cpu => BOX_CPU,
    :scripts => [
      {
        :bootstrap => BOX_BOOTSTRAP,
        :args => [username,password]
      },
     ]
    },
  {
    :name => "k8-worker-node-1",    
    :type => "slave",
    :box => BOX,
    :box_version => BOX_VERSION,    
    :mem => BOX_MEM,
    :max_mem => BOX_MEM_MAX,
    :cpu => BOX_CPU,
    :scripts => [
      {
        :bootstrap => BOX_BOOTSTRAP,
        :args => [username,password]
      },
    ]
  },
  {
    :name => "k8-worker-node-2",    
    :type => "slave",
    :box => BOX,
    :box_version => BOX_VERSION,    
    :mem => BOX_MEM,
    :max_mem => BOX_MEM_MAX,
    :cpu => BOX_CPU,
    :scripts => [
      {
        :bootstrap => BOX_BOOTSTRAP,
        :args => [username,password]
      },
    ]
  }
]

Vagrant.configure("2") do |config|
  
  servers.each do |opts|    
    config.vm.define opts[:name] do |config|
      config.vm.synced_folder '.', '/vagrant', disabled: true
      config.vm.box = opts[:box]
      config.vm.box_version = opts[:box_version]
      config.vm.hostname = opts[:name]
  
      config.vm.network "public_network", bridge: bridge
                  
      opts[:scripts].each do |scripts|
        if scripts[:args]
          config.vm.provision :shell, path: scripts[:bootstrap], :args => scripts[:args]
        else
          config.vm.provision :shell, path: scripts[:bootstrap]
        end
      end

      config.vm.provider "hyperv" do |v|
        v.vmname  = opts[:name]
        v.enable_virtualization_extensions = true
        v.cpus = opts[:cpu]
        v.memory = opts[:mem]
        v.maxmemory = opts[:max_mem]
        v.auto_start_action = "Start"
      end
    end
  end
end 